{"ast":null,"code":"import _readOnlyError from \"@babel/runtime-corejs2/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"/Users/tiger/Documents/web-type/hello-next/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n}\n\nexport default function Index() {\n  var _useSWR = useSWR('/api/randomQuote', fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  var author = data === null || data === void 0 ? void 0 : data.author;\n  var quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = (_readOnlyError(\"quote\"), 'Loading...');\n  if (error) quote = (_readOnlyError(\"quote\"), 'Failed to fetch the quote.');\n  return __jsx(\"main\", {\n    className: \"jsx-3417983587\" + \" \" + \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-3417983587\" + \" \" + \"quote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, quote), author && __jsx(\"span\", {\n    className: \"jsx-3417983587\" + \" \" + \"author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"- \", author), __jsx(_JSXStyle, {\n    id: \"3417983587\",\n    __self: this\n  }, \"main.jsx-3417983587{width:90%;max-width:900px;margin:300px auto;text-align:center;}.quote.jsx-3417983587{font-family:cursive;color:#e243de;font-size:24px;padding-bottom:10px;}.author.jsx-3417983587{font-family:sans-serif;color:#559834;font-size:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90aWdlci9Eb2N1bWVudHMvd2ViLXR5cGUvaGVsbG8tbmV4dC9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtQnNCLEFBR3lCLEFBTVUsQUFNRyxVQVhQLFVBTUYsR0FNQSxHQVhJLFFBTUgsR0FNQSxPQVhHLEtBTUUsR0FNdEIsVUFYQSxPQU1BIiwiZmlsZSI6Ii9Vc2Vycy90aWdlci9Eb2N1bWVudHMvd2ViLXR5cGUvaGVsbG8tbmV4dC9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB1c2VTV1IgZnJvbSAnc3dyJztcblxuZnVuY3Rpb24gZmV0Y2hlcih1cmwpIHtcbiAgICByZXR1cm4gZmV0Y2godXJsKS50aGVuKHIgPT4gci5qc29uKCkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbmRleCgpIHtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSB1c2VTV1IoJy9hcGkvcmFuZG9tUXVvdGUnLCBmZXRjaGVyKTtcbiAgICBjb25zdCBhdXRob3IgPSBkYXRhPy5hdXRob3I7XG4gICAgY29uc3QgcXVvdGUgPSBkYXRhPy5xdW90ZTtcblxuICAgIGlmICghZGF0YSkgcXVvdGUgPSAnTG9hZGluZy4uLic7XG4gICAgaWYgKGVycm9yKSBxdW90ZSA9ICdGYWlsZWQgdG8gZmV0Y2ggdGhlIHF1b3RlLic7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8bWFpbiBjbGFzc05hbWU9XCJjZW50ZXJcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInF1b3RlXCI+e3F1b3RlfTwvZGl2PlxuICAgICAgICAgIHthdXRob3IgJiYgPHNwYW4gY2xhc3NOYW1lPVwiYXV0aG9yXCI+LSB7YXV0aG9yfTwvc3Bhbj59XG4gICAgXG4gICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgbWFpbiB7XG4gICAgICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgICAgIG1heC13aWR0aDogOTAwcHg7XG4gICAgICAgICAgICAgIG1hcmdpbjogMzAwcHggYXV0bztcbiAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLnF1b3RlIHtcbiAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IGN1cnNpdmU7XG4gICAgICAgICAgICAgIGNvbG9yOiAjZTI0M2RlO1xuICAgICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLmF1dGhvciB7XG4gICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAgICAgICAgICAgICBjb2xvcjogIzU1OTgzNDtcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9tYWluPlxuICAgICk7XG59Il19 */\\n/*@ sourceURL=/Users/tiger/Documents/web-type/hello-next/pages/index.js */\"));\n}","map":{"version":3,"sources":["/Users/tiger/Documents/web-type/hello-next/pages/index.js"],"names":["useSWR","fetcher","url","fetch","then","r","json","Index","data","error","author","quote"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GAAjB,CAAP;AACH;;AAED,eAAe,SAASC,KAAT,GAAiB;AAAA,gBACJP,MAAM,CAAC,kBAAD,EAAqBC,OAArB,CADF;AAAA,MACpBO,IADoB,WACpBA,IADoB;AAAA,MACdC,KADc,WACdA,KADc;;AAE5B,MAAMC,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,MAArB;AACA,MAAMC,KAAK,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,KAApB;AAEA,MAAI,CAACH,IAAL,EAAWG,KAAK,6BAAG,YAAH,CAAL;AACX,MAAIF,KAAJ,EAAWE,KAAK,6BAAG,4BAAH,CAAL;AAEX,SACI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADF,EAEGD,MAAM,IAAI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BA,MAA5B,CAFb;AAAA;AAAA;AAAA,yrEADJ;AA0BH","sourcesContent":["import useSWR from 'swr';\n\nfunction fetcher(url) {\n    return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n    const { data, error } = useSWR('/api/randomQuote', fetcher);\n    const author = data?.author;\n    const quote = data?.quote;\n\n    if (!data) quote = 'Loading...';\n    if (error) quote = 'Failed to fetch the quote.';\n\n    return (\n        <main className=\"center\">\n          <div className=\"quote\">{quote}</div>\n          {author && <span className=\"author\">- {author}</span>}\n    \n          <style jsx>{`\n            main {\n              width: 90%;\n              max-width: 900px;\n              margin: 300px auto;\n              text-align: center;\n            }\n            .quote {\n              font-family: cursive;\n              color: #e243de;\n              font-size: 24px;\n              padding-bottom: 10px;\n            }\n            .author {\n              font-family: sans-serif;\n              color: #559834;\n              font-size: 20px;\n            }\n          `}</style>\n        </main>\n    );\n}"]},"metadata":{},"sourceType":"module"}